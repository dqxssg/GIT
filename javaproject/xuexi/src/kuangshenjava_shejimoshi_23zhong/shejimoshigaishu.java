package kuangshenjava_shejimoshi_23zhong;

import java.util.Scanner;

/**
 * 设计模式（GoF23）
 *
 * 不是语法规定，是一种用来提高代码的课复用性，可维护性，可读性，稳健性以及安全性的解决方案
 *
 * 设计模式的本质是面向对象设计的原则的实际运用，对类的封装性，继承性，多态性以及类的关联关系和组合关系的充分理解。
 *
 * 正确使用设计模式具有以下的优点：
 * 1、可以提高程序员的思维能力、编程能力、设计能力
 * 2、使程序设计更加标准化、代码编制更加工程化，使软件开发效力大大提高，从而缩短软件的开发周期
 * 3、使设计的代码可重用性高、可读性高、可靠性高、灵活性好、可维护性强
 *
 * 创建型模式：
 * 单列模式、工厂模式、抽象工厂模式、建造者模式、原型模式
 * 结构型模式：从程序的结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题
 * 适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式
 * 行为型模式：
 * 模板方法模式、命令模式、迭代器模式、中介模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式
 */
public class shejimoshigaishu {
}
