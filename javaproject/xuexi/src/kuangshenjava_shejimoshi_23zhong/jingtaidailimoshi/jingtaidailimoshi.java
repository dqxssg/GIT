package kuangshenjava_shejimoshi_23zhong.jingtaidailimoshi;

/**
 * 静态代理模式
 * 是SpringAOP底层
 * <p>
 * 角色分析：
 * 抽象角色：一般会使用接口或者抽象类来解决
 * 真实角色：被代理的角色
 * 代理角色：代理真实角色，代理真是角色后，我们一般会做一些附属操作
 * 客户：访问代理对象的人
 * <p>
 * 好处：
 * 1、可以是真实角色的操作更加纯粹，不用全去关注一些公共的业务
 * 2、公共也就交给代理角色，实现了业务的分工
 * 3、公共业务发生扩展的时候，方便集中管理
 * <p>
 * 缺点：
 * 一个真是角色就会产生一个代理角色，代码量会翻倍（开发效率变低）
 * <p>
 * 代码步骤：
 * 1、接口
 * Rent
 * 2、真实角色
 * Host
 * 3、代理角色
 * Proxy
 * 4、客户端访问代理
 * Client
 */

public class jingtaidailimoshi {
}
