package kuangshenjava_shejimoshi_23zhong.qiaojiemoshi;

/**
 * 桥接模式（brudge）
 * 桥接模式使将抽象部分与它的实现部分分离，是她们都可以独立的变化。它是一种对象结构型模式，又称为柄体（Handle and Body）模式或接口（Interfce）模式
 * 好处分析：
 * 1、桥接模式偶尔类似于多继承方案，凡是多继承方案违背了类的单一职责原则，复用性比较差，类的个数也非常多，桥接模式比多继承方案更好的解决方法。极大的减少了子类的个数，从而降低管理和维护的成本
 * 2、桥接模式提高了系统的可扩展性，在两个变化维度中任意扩展一个维度，都不需要修改原有系统。符合开闭原则，就像一座桥，可以把两个变化的维度连接起来
 * 劣势分析：
 * 1、桥接模式的引入回增肌系统的理解与设计难度，由于聚合关联关系建立在抽象层，要求开发者针对抽象进行设计与编程
 * 2、桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围具有一定的局限性
 * 最佳实践：
 * 1、如果一个系统需要在构建抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，通过桥接模式可以使它们在在抽象层建立一个关联关系。抽象化角色和实现化角色可以继承的方法独立扩展而互不影响，在程序运行时可以动态将一个抽象化子类的对象和一个实现化子类的对象进行组合，即系统需要抽象化角色和实现化角色进行动态耦合
 * 2、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展
 * 3、虽然在系统中使用继承是没有问题的，但是由于抽象化角色和具体化角色需要独立变化，设计要求需要对立管理这两者。对于那些不希望使用继承或因为多层次继承导致系统类的个数增肌的系统，桥接模式尤为适用
 * 场景：
 * 1、JAVA语言通过JAVA虚拟机实现类平台的无关性
 * 2、AWT中的Peer架构
 * 3、JDBC驱动程序也是桥接模式的应用之一
 */

public class qiaojiemoshi {
}
